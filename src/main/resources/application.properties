# -----------------------------------------------------------
# Server Settings
# -----------------------------------------------------------
server.servlet.context-path=/hmm-web
server.port=8080

# true일 경우 css, html 등 압축해서 전송할 때 이득이 되는 포맷들은 자동적으로 압축해서 보내는 것으로 설정된다.
server.compression.enabled=true

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# 도메인을 지정해야지만 하나의 톰캣에서 여러 스프링 부트 프로젝트를 실행할 수 있다.
spring.jmx.default-domain=admin

spring.devtools.livereload.enabled=true

tcp.local.ip=0.0.0.0
tcp.local.cdma.port=9000

# -----------------------------------------------------------
# Database Settings
# -----------------------------------------------------------
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@59.27.124.186:9090:orcl
spring.datasource.username=c##hnms
spring.datasource.password=hnms1

# Hikari CP settings
spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=5

# -----------------------------------------------------------
# JPA Settings
# -----------------------------------------------------------
spring.jpa.database=oracle

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다. ex) 테이블 생성, 삭제 등 
spring.jpa.generate-ddl=false

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update

# -----------------------------------------------------------
# Logging Settings
# -----------------------------------------------------------
debug=false

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=DEBUG

logging.level.=error

#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO
#logging.level.org.springframework.security=INFO